!function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){},function(e,t,n){"use strict";n.r(t);n(0);const s=document.querySelector(".forms"),r=(document.querySelector(".list"),document.querySelector(".transportList")),a=document.querySelector(".costList"),o="TransportList",i="CostOfDeliveryList";var c=e=>{const{id:t,model:n,costBykg:s,costBykm:r}=e;return`\n    <li class="listItem show cost">\n      <h3>Cost Of Delivery</h3>\n      <p>id: ${t}</p>\n      <p>Transport model: ${n}</p>\n      <p>Cost By Kg: ${s} </p>\n      <p>Cost by km: ${r} </p>\n    </li>\n  `},l=e=>{const{id:t,model:n,producedYear:s,capacity:r,averageSpeed:a}=e;let o,i;return e.countOfTeam?(o=e.countOfTeam,i=e.name):(o=e.typeOfGas,i=e.licensePlate),`\n    <li class="listItem show transport">\n      <h3>Transport - ${e.countOfTeam?"Ship":"Truck"}</h3>\n      <p>id: ${t}</p>\n      <p>model: ${n}</p>\n      <p>${e.countOfTeam?"Name":"License plate"}: ${i}</p>\n      <p>Produced Year: ${s}</p>\n      <p>Capacity: ${r} kg</p>\n      <p>Avareage Speed: ${a} ${e.countOfTeam?"nm":"km"}</p>\n      <p> ${e.countOfTeam?"Count Of Team":"Type Of Gas"}: ${o}</p>\n    </li>\n  `};class u{constructor(e){this.localStorage=e}renderItems(){const e=this.localStorage.getItem(o),t=this.localStorage.getItem(i);e.forEach(e=>{u.renderItem(e,"Transport")}),t.forEach(e=>{u.renderItem(e,"Cost")})}static renderItem(e,t){"Transport"===t?r.insertAdjacentHTML("beforeend",l(e)):a.insertAdjacentHTML("beforeend",c(e))}}class d{constructor(){return d.instance?d.instance:(this.prefix="JS-Band-",d.instance=this,this)}getItem(e){const t=localStorage.getItem(`${this.prefix}${e}`);return JSON.parse(t)}add(e,t){try{const n=this.getItem(e);n.push(t),localStorage.setItem(`${this.prefix}${e}`,JSON.stringify(n))}catch(e){console.error(e)}}setKeys(e){e.forEach(e=>{!this.getItem(e)&&localStorage.setItem(`${this.prefix}${e}`,JSON.stringify([]))})}}var p=e=>`\n    <form class="create transport ${e}" >\n      <span class="aWarning">*all fields are required</span>\n      <h2>Create ${e}</h2>\n      <label >\n        Model:\n        <input type="text" required class="model ${e}" >\n      </label>\n      <label >\n        ${"Ship"===e?"Serial Number/Name:":"Licence Plate"}\n        <input type="text" required class="nameOfTransport ${e}">\n      </label>\n      <label >\n        Produced Year:\n        <input type="number" required class="producedYear ${e}" min="0" >\n      </label>\n      <label >\n        Capacity:\n        <input type="number" required class="capacity ${e}" min="0">\n      </label>\n      <label >\n        Average speed:\n        <input type="number" required class="averageSpeed ${e}" min="0">\n      </label>\n      <label >\n        ${"Ship"===e?"Count of Team:":"Type of gas"}\n        <input type="text" required class="countOrGas ${e}">\n      </label>\n      <div class="btnGreate">\n        <button class="cancelAdd ${e}" type="button">Cancel</button>\n        <button class="saveNewTransport" type="submit" >Save</button>\n      </div>\n    </form>\n  `;var m=function e(){let t="";const n="abcdefghijklmnopqrstuvwxyz".length,s=new d,r=s.getItem(o),a=s.getItem(i);for(let e=0;e<3;e+=1){for(let e=0;e<5;e+=1)t+="abcdefghijklmnopqrstuvwxyz".charAt(Math.floor(Math.random()*n));2!==e&&(t+="-")}return a&&a.forEach(n=>n.id===t?e():null),r&&r.forEach(n=>n.id===t?e():null),t};class h{constructor(e,t,n){this.id=m(),this.producedYear=e,this.capacity=t,this.averageSpeed=n}showCapacityInPounds(){return 2.2046*this.capacity}}class f extends h{constructor(e,t,n,...s){super(...s),this.model=e,this.licensePlate=t,this.typeOfGas=n}showAverageSpeed(){return`${this.averageSpeed}km`}}class y extends h{constructor(e,t,n,...s){super(...s),this.model=e,this.name=t,this.countOfTeam=n}showAverageSpeed(){return`${this.averageSpeed}nm`}}class b{constructor(e,...t){switch(e){case"Truck":return new f(...t);case"Ship":return new y(...t)}}}class g{constructor(e){this.name=e,this.store=new d,this.inputEls=["model","nameOfTransport","producedYear","capacity","averageSpeed","countOrGas"],this.inputValues=this.inputEls.map(e=>`${e}Value`),g.createForm(this.name),this.takeElementsFromForm(),this.setListenersForm()}static createForm(e){s.insertAdjacentHTML("afterbegin",p(e))}takeElementsFromForm(){this.createEl=document.querySelector(`.create.transport.${this.name}`),this.model=document.querySelector(`.model.${this.name}`),this.nameOfTransport=document.querySelector(`.nameOfTransport.${this.name}`),this.producedYear=document.querySelector(`.producedYear.${this.name}`),this.capacity=document.querySelector(`.capacity.${this.name}`),this.averageSpeed=document.querySelector(`.averageSpeed.${this.name}`),this.countOrGas=document.querySelector(`.countOrGas.${this.name}`),this.btnCancel=document.querySelector(`.cancelAdd.${this.name}`)}setListenersForm(){this.inputEls.forEach((e,t)=>{this[e].addEventListener("input",e=>this.setListenerInput(e,this.inputValues[t]))}),this.createEl.addEventListener("submit",this.handleSubmit.bind(this)),this.btnCancel.addEventListener("click",this.cancelAdd.bind(this))}setListenerInput(e,t){this[t]=e.target.value.trim()}cancelAdd(){this.resetData()}handleSubmit(e){e.preventDefault();const t=new b(this.name,...this.inputValues.map(e=>this[e]));this.store.add(o,t),u.renderItem(t,"Transport"),this.resetData()}resetData(){this.inputEls.forEach(e=>{this[e].value=""})}}var v='\n  <form class="create costOfDelivery">\n    <span class="aWarning">*all fields are required</span>\n    <h2>Create Cost Of Delivery</h2>\n    <span>Model Of Transport</span>\n    <select class="modelOfTransport" required>\n      <option disabled selected></option>\n      <option value="Ship">Ship</option>\n      <option value="Truck">Truck</option>\n    </select>\n    <label >\n      Cost (by 1kg of cargo):\n      <input type="number" class="costBykg" required min="0">\n    </label>\n    <label >\n        Cost (by 1 km of distance)\n      <input type="number" class="costBykm" required min="0">\n    </label>\n    <div class="btnGreate">\n    <button class="cancelAdd" type="button">Cancel</button>\n    <button class="saveNewTransport" type="submit" >Save</button>\n    </div>\n  </form>\n';class S{constructor(e,t,n){this.id=m(),this.model=e,this.costBykg=t,this.costBykm=n}}class O{constructor(){this.store=new d,O.createForm(),this.takeElementsFromForm(),this.setListenersForm()}static createForm(){s.insertAdjacentHTML("afterbegin",v)}takeElementsFromForm(){this.createEl=document.querySelector(".create.costOfDelivery"),this.modelOfTransport=document.querySelector(".modelOfTransport"),this.costBykg=document.querySelector(".costBykg"),this.costBykm=document.querySelector(".costBykm"),this.btnCancel=document.querySelector(".cancelAdd")}setListenersForm(){this.createEl.addEventListener("submit",this.handleSubmit.bind(this)),this.modelOfTransport.addEventListener("click",this.setModelOfTransport.bind(this)),this.costBykg.addEventListener("input",this.setCostBykg.bind(this)),this.costBykm.addEventListener("input",this.setCostBykm.bind(this)),this.btnCancel.addEventListener("click",this.cancelAdd.bind(this))}setModelOfTransport(e){this.modelOfTransportValue=e.target.value}setCostBykg(e){this.costBykgValue=e.target.value.trim()}setCostBykm(e){this.costBykmValue=e.target.value.trim()}cancelAdd(){this.resetData()}handleSubmit(e){e.preventDefault();const t=new S(this.modelOfTransportValue,this.costBykgValue,this.costBykmValue);this.store.add(i,t),u.renderItem(t,"Cost"),this.resetData()}resetData(){this.modelOfTransport.value="",this.costBykg.value="",this.costBykm.value=""}}!function(){const e=new d,t=new u(e);new O("Cost"),new g("Truck"),new g("Ship"),e.setKeys([o,i]),t.renderItems()}()}]);